#INCLUDE "wiring.module"

PROC serialWrite.mega (VAL INT usart, VAL []BYTE str)
  SEQ i = 0 FOR SIZE str
    serialWriteByte.blocking(usart, str[i])
:

PROC serial.write (VAL []BYTE str, CHAN BYTE b!)
  SEQ i = 0 FOR SIZE str
    b ! str[i]
:

PROC write.to.all.ports ()
  SEQ
    PAR serial = 0 FOR 4
      SEQ
        serial.setup(serial, 57600) 
        [4]CHAN BYTE out:
        PAR
          WHILE TRUE
            SEQ
              serial.write("Hello from ", out[serial]!)
              serial.write.int(serial, serial)
              serial.write("*n", out[serial]!)
          WHILE TRUE
            BYTE b:
            SEQ
              out[serial] ? b
              serial.write.byte(serial, b)
:

-- Output something on TX0. Bounce it through until we send it out TX3 to the PC.
PROC bounce ()
  SEQ
    
    -- Set everyone up.
    SEQ serial = 0 FOR 4
      serial.setup(serial, 57600)
    INITIAL BYTE b IS 0:
    WHILE TRUE
      SEQ
        --b := ((b + 1) \ 26)
        serial.write.byte(1, b)
        serial.read.byte(2, b)
        serial.write.byte(2, b)
        serial.read.byte(3, b)
        serial.write.byte(3, b + 65)
:
