Import("env")

# firmware_env.Append(SKROCFLAGS=['--no-std-libs'])
# firmware_h = firmware_env.OccamBytecodeHeader('firmware.h', 'firmware.occ')

tvm_env  = env
tvm_conf = tvm_env.Configure(config_h = 'config.h', help=False)

headers  = Split('''
        stdlib.h stdio.h stdarg.h string.h
        dlfcn.h errno.h inttypes.h limits.h math.h
        search.h signal.h termios.h time.h unistd.h
        sys/ioctl.h sys/time.h sys/timeb.h sys/types.h
        ''')
for h in headers:
    tvm_conf.CheckCHeader(h)

functions = Split('ftime gettimeofday nanosleep setitimer Sleep')    
for f in functions:
    tvm_conf.CheckFunc(f)

tvm_conf.Define('VERSION', '"1.0.0"', 'The version of the package')
#tvm_conf.Define('TVM_USE_FPU', 1, 'define to allow FPU usage')
tvm_conf.Define('TVM_FIRMWARE_PATH', "\"./\"", 'Default path to firmware')
tvm_conf.Define('TVM_LIBRARY_PATH', "\"./\"", "default library path")
#tvm_conf.Define('TVM_EXTERNAL_CHANNEL_BUNDLES', 1, 'bundles')
tvm_conf.Define('HAVE_GETTIMEOFDAY', 1, 'time')

env = tvm_conf.Finish()        
env.Append(CCFLAGS = '-DHAVE_CONFIG_H')

tvm_src = Split('''
        main.c
        sffi.c
        unix_io.c
        tbc.c
        introspect.c
        vm.c
        ffi.c
        ''')

tvm = env.Program(
    'tvm.html', 
    tvm_src, 
    LIBS=["libtvm", "dl", "m"],
    LIBPATH=["../libtvm"],
    CPPPATH=["../libtvm"]
    )
Default(tvm)

env.Append(CPPPATH='../libtvm')
